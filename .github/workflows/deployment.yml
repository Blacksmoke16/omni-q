name: Deployment

on:
  release:
    types:
    - created

env:
  TARGET_ARCH_LIST: '["arm64","amd64"]'

jobs:
  dist_linux_build:
    runs-on: ubuntu-latest
    outputs:
      assets: ${{ steps.record_output.outputs.assets }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-tags: true
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build
      run: ./hack/dist/build.sh
    - name: Record output
      id: record_output
      run: |
        assets="$(ls --color=no ./bin/ | jq -R -s -c 'split("\n")[:-1]')"
        echo "assets=${assets}" | tee -a "${GITHUB_OUTPUT}"
    - name: Upload binary artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-artifacts
        path: bin/
        retention-days: 1
        if-no-files-found: error
  dist_linux_upload:
    runs-on: ubuntu-latest
    needs: dist_linux_build
    strategy:
      matrix:
        asset: ${{ fromJSON(needs.dist_linux_build.outputs.assets) }}
    steps:
    - name: Download binary artifacts
      uses: actions/download-artifact@v4
      with:
        name: binary-artifacts
        path: bin
    - name: Upload
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: "bin/${{ matrix.asset }}"
        asset_name: ${{ matrix.asset }}
        asset_content_type: binary/octet-stream
  dist_snap:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build Snap
      uses: snapcore/action-build@v1
      id: build
    - name: Publish Snap
      uses: snapcore/action-publish@v1
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
      with:
        snap: ${{ steps.build.outputs.snap }}
        release: stable
  dist_homebrew:
    runs-on: macos-latest
    steps:
    - run: git config --global user.email "george@dietrich.app"
    - run: git config --global user.name "George Dietrich"
    - name: Bump Formula
      uses: Homebrew/actions/bump-formulae@b5d9170bc1edf1103e40226592b5842b783dd1e0
      with:
        token: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}
        formulae: oq
  deploy_docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Crystal
      uses: crystal-lang/install-crystal@v1
    - name: Build
      run: crystal docs
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'docs/'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
