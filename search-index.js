crystal_doc_search_index_callback({"repository_name":"oq","body":"# oq\n\n[![Built with Crystal](https://img.shields.io/badge/built%20with-crystal-000000.svg?logo=crystal)](https://crystal-lang.org/)\n[![CI](https://github.com/blacksmoke16/oq/workflows/CI/badge.svg)](https://github.com/blacksmoke16/oq/actions?query=workflow%3ACI)\n[![Latest release](https://img.shields.io/github/release/blacksmoke16/oq.svg?color=teal&logo=github)](https://github.com/blacksmoke16/oq/releases)\n[![oq](https://snapcraft.io/oq/badge.svg)](https://snapcraft.io/oq)\n[![oq](https://img.shields.io/aur/version/oq?label=oq&logo=arch-linux)](https://aur.archlinux.org/packages/oq/)\n[![oq-bin](https://img.shields.io/aur/version/oq-bin?label=oq-bin&logo=arch-linux)](https://aur.archlinux.org/packages/oq-bin/)\n\nA performant, portable [jq](https://github.com/stedolan/jq/) wrapper thats facilitates the consumption and output of formats other than JSON; using `jq` filters to transform the data.\n\n* Compiles to a single binary for easy portability.\n* Performant, similar performance with JSON data compared to `jq`.  Slightly longer execution time when going to/from a non-JSON format.  \n* Supports various other input/output [formats](https://blacksmoke16.github.io/oq/OQ/Format.html), such as `XML` and `YAML`.\n* Can be used as a dependency within other Crystal projects.\n\n## Installation\n\n### Linux\n\nA statically linked binary for Linux `x86_64` as available on the [Releases](https://github.com/Blacksmoke16/oq/releases) tab.  Additionally it can also be installed via various package managers.\n\n#### Snap\n\nFor more on installing & using `snap` with your Linux distribution, see the [official documentation](https://docs.snapcraft.io/installing-snapd).\n\n```sh\nsudo snap install oq\n```\n\n#### Arch\n\nUsing [yay](https://github.com/Jguer/yay):\n\n```sh\nyay -S oq\n```\n\nA pre-compiled version is also available:\n\n```sh\nyay -S oq-bin\n```\n\n### MacOS\n\n```sh\nbrew install oq\n```\n\n### From Source\n\nIf building from source, `jq` will need to be installed separately. Installation instructions can be found in the [official documentation](https://stedolan.github.io/jq/).\n\nRequires Crystal to be installed, see the [installation documentation](https://crystal-lang.org/install).\n\n```sh\ngit clone https://github.com/Blacksmoke16/oq.git\ncd oq/\nshards build --production --release\n```\n\nThe built binary will be available as `./bin/oq`.  This can be relocated elsewhere on your machine; be sure it is in your `PATH` to access it as `oq`.\n\n### Docker\n\n`oq` can easily be included into a Docker image by fetching the static binary from Github for the version of `oq` that you want.\n\n```dockerfile\n# Set an arg to store the oq version that should be installed.\nARG OQ_VERSION=1.3.2\n\n# Grab the binary from the latest Github release and make it executable; placing it within /usr/local/bin.  Can also put it elsewhere if you so desire.\nRUN wget https://github.com/Blacksmoke16/oq/releases/download/v${OQ_VERSION}/oq-v${OQ_VERSION}-linux-x86_64 -O /usr/local/bin/oq && chmod +x /usr/local/bin/oq\n\n# Or using curl (needs to follow Github's redirect):\nRUN curl -L -o /usr/local/bin/oq https://github.com/Blacksmoke16/oq/releases/download/v${OQ_VERSION}/oq-v${OQ_VERSION}-linux-x86_64 && chmod +x /usr/local/bin/oq\n\n# Also be sure to install jq if it is not already!\n```\n\n### Existing Crystal Project\n\nAdd the following to your `shard.yml` and run `shards install`.\n\n```yaml\ndependencies:\n  oq:\n    github: blacksmoke16/oq\n    version: ~> 1.3.0\n```\n\n## Usage\n\n### CLI\n\nUse the `oq` binary, with a few optional custom arguments, see `oq --help`.  All other arguments get passed to `jq`. See [jq manual](https://stedolan.github.io/jq/manual/) for details.\n\n### Library\n\nCheckout the [API Documentation](https://blacksmoke16.github.io/oq/OQ/Processor.html) for using `oq` within an existing Crystal project.\n\n### Examples\n\nConsume JSON and output XML\n\n```sh\n$ echo '{\"name\": \"Jim\"}' | oq -o xml .\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <name>Jim</name>\n</root>\n```\n\nConsume YAML from a file and output XML\n\ndata.yaml\n\n```yaml\n---\nname: Jim\nnumbers:\n  - 1\n  - 2\n  - 3\n```\n\n```sh\n$ oq -i yaml -o xml . data.yaml \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <name>Jim</name>\n  <numbers>1</numbers>\n  <numbers>2</numbers>\n  <numbers>3</numbers>\n</root>\n```\n\nUse `oq` as a library, consuming some raw `JSON` input, convert it to `YAML`, and write the transformed data to a file.\n\n```crystal\nrequire \"oq\"\n\n# This could be any `IO`, e.g. an `HTTP` request body, etc.\ninput_io = IO::Memory.new %({\"name\":\"Jim\"})\n\n# Create a processor, specifying that we want the output format to be `YAML`.\nprocessor = OQ::Processor.new output_format: :yaml\n\nFile.open(\"./out.yml\", \"w\") do |file|\n  # Process the data using our custom input and output IOs.\n  # The first argument represents the input arguments;\n  # i.g. the filter and/or any other arguments that should be passed to `jq`.\n  processor.process [\".\"], input: input_io, output: file\nend\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/Blacksmoke16/oq/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [George Dietrich](https://github.com/Blacksmoke16) - creator, maintainer\n- [Michael Springer](https://github.com/sprngr) - contributor\n","program":{"html_id":"oq/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"oq","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"oq/OQ","path":"OQ.html","kind":"module","full_name":"OQ","name":"OQ","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/converters/json.cr","line_number":2,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/json.cr#L2"},{"filename":"src/oq.cr","line_number":8,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L8"}],"repository_name":"oq","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"1.3.2\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A performant, and portable jq wrapper thats facilitates the consumption and output of formats other than JSON; using jq filters to transform the data.","summary":"<p>A performant, and portable jq wrapper thats facilitates the consumption and output of formats other than JSON; using jq filters to transform the data.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"oq/OQ/Converters","path":"OQ/Converters.html","kind":"module","full_name":"OQ::Converters","name":"Converters","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/converters/json.cr","line_number":2,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/json.cr#L2"}],"repository_name":"oq","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"oq/OQ","kind":"module","full_name":"OQ","name":"OQ"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"oq/OQ/Converters/JSON","path":"OQ/Converters/JSON.html","kind":"module","full_name":"OQ::Converters::JSON","name":"JSON","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/converters/json.cr","line_number":2,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/json.cr#L2"}],"repository_name":"oq","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"oq/OQ/Converters","kind":"module","full_name":"OQ::Converters","name":"Converters"},"doc":"Converter for the `OQ::Format::JSON` format.","summary":"<p>Converter for the <code><a href=\"../../OQ/Format.html#JSON\">OQ::Format::JSON</a></code> format.</p>","class_methods":[{"html_id":"deserialize(input:IO,output:IO):Nil-class-method","name":"deserialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(input : IO, output : IO) : Nil","args_html":"(input : IO, output : IO) : Nil","location":{"filename":"src/converters/json.cr","line_number":3,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/json.cr#L3"},"def":{"name":"deserialize","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"IO.copy(input, output)"}},{"html_id":"serialize(input:IO,output:IO):Nil-class-method","name":"serialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(input : IO, output : IO) : Nil","args_html":"(input : IO, output : IO) : Nil","location":{"filename":"src/converters/json.cr","line_number":7,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/json.cr#L7"},"def":{"name":"serialize","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"IO.copy(input, output)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"oq/OQ/Converters/SimpleYAML","path":"OQ/Converters/SimpleYAML.html","kind":"module","full_name":"OQ::Converters::SimpleYAML","name":"SimpleYAML","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/converters/simple_yaml.cr","line_number":4,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/simple_yaml.cr#L4"}],"repository_name":"oq","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"oq/OQ/Converters/SimpleYAML","kind":"module","full_name":"OQ::Converters::SimpleYAML","name":"SimpleYAML"},{"html_id":"oq/OQ/Converters/YAML","kind":"module","full_name":"OQ::Converters::YAML","name":"YAML"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"oq/OQ/Converters","kind":"module","full_name":"OQ::Converters","name":"Converters"},"doc":"Converter for the `OQ::Format::SimpleYAML` format.","summary":"<p>Converter for the <code><a href=\"../../OQ/Format.html#SimpleYAML\">OQ::Format::SimpleYAML</a></code> format.</p>","class_methods":[],"constructors":[],"instance_methods":[{"html_id":"deserialize(input:IO,output:IO):Nil-instance-method","name":"deserialize","doc":"ameba:disable Metrics/CyclomaticComplexity","summary":"<p>ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(input : IO, output : IO) : Nil","args_html":"(input : IO, output : IO) : Nil","location":{"filename":"src/converters/simple_yaml.cr","line_number":9,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/simple_yaml.cr#L9"},"def":{"name":"deserialize","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"yaml = ::YAML::PullParser.new(input)\njson = ::JSON::Builder.new(output)\nyaml.read_stream do\n  loop do\n    case yaml.kind\n    when .document_start?\n      json.start_document\n    when .document_end?\n      json.end_document\n      yaml.read_next\n      break\n    when .scalar?\n      string = yaml.value\n      if json.next_is_object_key?\n        json.scalar(string)\n      else\n        scalar = ::YAML::Schema::Core.parse_scalar(yaml)\n        case scalar\n        when Nil\n          json.scalar(scalar)\n        when Bool\n          json.scalar(scalar)\n        when Int64\n          json.scalar(scalar)\n        when Float64\n          json.scalar(scalar)\n        else\n          json.scalar(string)\n        end\n      end\n    when .sequence_start?\n      json.start_array\n    when .sequence_end?\n      json.end_array\n    when .mapping_start?\n      json.start_object\n    when .mapping_end?\n      json.end_object\n    end\n    yaml.read_next\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"oq/OQ/Converters/XML","path":"OQ/Converters/XML.html","kind":"module","full_name":"OQ::Converters::XML","name":"XML","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/converters/xml.cr","line_number":2,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/xml.cr#L2"}],"repository_name":"oq","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"oq/OQ/Converters/ProcessorAware","kind":"module","full_name":"OQ::Converters::ProcessorAware","name":"ProcessorAware"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"oq/OQ/Converters","kind":"module","full_name":"OQ::Converters","name":"Converters"},"doc":"Converter for the `OQ::Format::XML` format.","summary":"<p>Converter for the <code><a href=\"../../OQ/Format.html#XML\">OQ::Format::XML</a></code> format.</p>","class_methods":[{"html_id":"deserialize(input:IO,output:IO):Nil-class-method","name":"deserialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(input : IO, output : IO) : Nil","args_html":"(input : IO, output : IO) : Nil","location":{"filename":"src/converters/xml.cr","line_number":5,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/xml.cr#L5"},"def":{"name":"deserialize","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"builder = ::JSON::Builder.new(output)\nxml = ::XML::Reader.new(input)\nxml.read\nif xml.node_type.none?\n  raise(::XML::Error.new(LibXML.xmlGetLastError))\nend\nbuilder.document do\n  builder.object do\n    while !xml.node_type.element?\n      xml.read\n    end\n    process_element_node(xml.expand, builder)\n  end\nend\n"}},{"html_id":"processor:OQ::Processor-class-method","name":"processor","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OQ::Processor","args_html":" : <a href=\"../../OQ/Processor.html\">OQ::Processor</a>","location":null,"def":{"name":"processor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OQ::Processor","visibility":"Public","body":"if (value = @@processor).nil?\n  ::raise(NilAssertionError.new(\"OQ::Converters::XML.processor cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"processor=(processor:OQ::Processor)-class-method","name":"processor=","doc":null,"summary":null,"abstract":false,"args":[{"name":"processor","doc":null,"default_value":"","external_name":"processor","restriction":"OQ::Processor"}],"args_string":"(processor : OQ::Processor)","args_html":"(processor : <a href=\"../../OQ/Processor.html\">OQ::Processor</a>)","location":null,"def":{"name":"processor=","args":[{"name":"processor","doc":null,"default_value":"","external_name":"processor","restriction":"OQ::Processor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@processor = processor"}},{"html_id":"processor?:OQ::Processor?-class-method","name":"processor?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : OQ::Processor?","args_html":" : <a href=\"../../OQ/Processor.html\">OQ::Processor</a>?","location":null,"def":{"name":"processor?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"OQ::Processor | ::Nil","visibility":"Public","body":"@@processor"}},{"html_id":"serialize(input:IO,output:IO):Nil-class-method","name":"serialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(input : IO, output : IO) : Nil","args_html":"(input : IO, output : IO) : Nil","location":{"filename":"src/converters/xml.cr","line_number":122,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/xml.cr#L122"},"def":{"name":"serialize","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"json = ::JSON::PullParser.new(input)\nbuilder = ::XML::Builder.new(output)\nbuilder.indent = ((self.processor.tab? ? \"\\t\" : \" \") * self.processor.indent)\nif self.processor.xml_prolog?\n  builder.start_document(\"1.0\", \"UTF-8\")\nend\nif root = self.processor.xml_root.presence\n  builder.start_element(root)\nend\nloop do\n  emit(builder, json)\n  if json.kind.eof?\n    break\n  end\nend\nif self.processor.xml_root.presence\n  builder.end_element\nend\nif self.processor.xml_prolog?\n  builder.end_document\nend\nif self.processor.xml_prolog?\nelse\n  builder.flush\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"oq/OQ/Converters/YAML","path":"OQ/Converters/YAML.html","kind":"module","full_name":"OQ::Converters::YAML","name":"YAML","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/converters/yaml.cr","line_number":2,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/yaml.cr#L2"}],"repository_name":"oq","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"oq/OQ/Converters/YAML","kind":"module","full_name":"OQ::Converters::YAML","name":"YAML"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"oq/OQ/Converters","kind":"module","full_name":"OQ::Converters","name":"Converters"},"doc":"Converter for the `OQ::Format::YAML` format.","summary":"<p>Converter for the <code><a href=\"../../OQ/Format.html#YAML\">OQ::Format::YAML</a></code> format.</p>","class_methods":[],"constructors":[],"instance_methods":[{"html_id":"deserialize(input:IO,output:IO):Nil-instance-method","name":"deserialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(input : IO, output : IO) : Nil","args_html":"(input : IO, output : IO) : Nil","location":{"filename":"src/converters/yaml.cr","line_number":5,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/yaml.cr#L5"},"def":{"name":"deserialize","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(::YAML.parse(input)).to_json(output)"}},{"html_id":"serialize(input:IO,output:IO):Nil-instance-method","name":"serialize","doc":"ameba:disable Metrics/CyclomaticComplexity","summary":"<p>ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(input : IO, output : IO) : Nil","args_html":"(input : IO, output : IO) : Nil","location":{"filename":"src/converters/yaml.cr","line_number":10,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/converters/yaml.cr#L10"},"def":{"name":"serialize","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"json = ::JSON::PullParser.new(input)\nyaml = ::YAML::Builder.new(output)\nif json.kind.eof?\n  return\nend\nyaml.stream do\n  yaml.document do\n    loop do\n      case json.kind\n      when .null?\n        yaml.scalar(nil)\n      when .bool?\n        yaml.scalar(json.bool_value)\n      when .int?\n        yaml.scalar(json.int_value)\n      when .float?\n        yaml.scalar(json.float_value)\n      when .string?\n        if ::YAML::Schema::Core.reserved_string?(json.string_value)\n          yaml.scalar(json.string_value, style: :double_quoted)\n        else\n          yaml.scalar(json.string_value)\n        end\n      when .begin_array?\n        yaml.start_sequence\n      when .end_array?\n        yaml.end_sequence\n      when .begin_object?\n        yaml.start_mapping\n      when .end_object?\n        yaml.end_mapping\n      when .eof?\n        break\n      end\n      json.read_next\n    end\n  end\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"oq/OQ/Format","path":"OQ/Format.html","kind":"enum","full_name":"OQ::Format","name":"Format","abstract":false,"superclass":null,"ancestors":[{"html_id":"oq/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"oq/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"oq/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"oq/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/oq.cr","line_number":12,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L12"}],"repository_name":"oq","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"JSON","name":"JSON","value":"0","doc":"The [JSON](https://www.json.org/) format.","summary":"<p>The <a href=\"https://www.json.org/\">JSON</a> format.</p>"},{"id":"SimpleYAML","name":"SimpleYAML","value":"1","doc":"Same as `YAML`, but does not support [anchors or aliases](https://yaml.org/spec/1.2/spec.html#id2765878);\nthus allowing for the input conversion to be streamed, reducing the memory usage for large inputs.","summary":"<p>Same as <code><a href=\"../OQ/Format.html#YAML\">YAML</a></code>, but does not support <a href=\"https://yaml.org/spec/1.2/spec.html#id2765878\">anchors or aliases</a>; thus allowing for the input conversion to be streamed, reducing the memory usage for large inputs.</p>"},{"id":"XML","name":"XML","value":"2","doc":"The [XML](https://en.wikipedia.org/wiki/XML) format.\n\nNOTE: Conversion to and from `JSON` uses [this](https://www.xml.com/pub/a/2006/05/31/converting-between-xml-and-json.html) spec.","summary":"<p>The <a href=\"https://en.wikipedia.org/wiki/XML\">XML</a> format.</p>"},{"id":"YAML","name":"YAML","value":"3","doc":"The [YAML](https://yaml.org/) format.","summary":"<p>The <a href=\"https://yaml.org/\">YAML</a> format.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"oq/OQ","kind":"module","full_name":"OQ","name":"OQ"},"doc":"The support formats that can be converted to/from.","summary":"<p>The support formats that can be converted to/from.</p>","class_methods":[{"html_id":"to_s(io:IO):Nil-class-method","name":"to_s","doc":"Returns the list of supported formats.","summary":"<p>Returns the list of supported formats.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/oq.cr","line_number":29,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L29"},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.names.join(io, \", \") do |str, join_io|\n  str.downcase(join_io)\nend"}}],"constructors":[],"instance_methods":[{"html_id":"converter(processor:OQ::Processor)-instance-method","name":"converter","doc":"Maps a given format to its converter.","summary":"<p>Maps a given format to its converter.</p>","abstract":false,"args":[{"name":"processor","doc":null,"default_value":"","external_name":"processor","restriction":"OQ::Processor"}],"args_string":"(processor : OQ::Processor)","args_html":"(processor : <a href=\"../OQ/Processor.html\">OQ::Processor</a>)","location":{"filename":"src/oq.cr","line_number":34,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L34"},"def":{"name":"converter","args":[{"name":"processor","doc":null,"default_value":"","external_name":"processor","restriction":"OQ::Processor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(case self\nin .json?\n  OQ::Converters::JSON\nin .simple_yaml?\n  OQ::Converters::SimpleYAML\nin .xml?\n  OQ::Converters::XML\nin .yaml?\n  OQ::Converters::YAML\nend).tap do |converter|\n  if converter.is_a?(OQ::Converters::ProcessorAware)\n    converter.processor = processor\n  end\nend"}},{"html_id":"json?-instance-method","name":"json?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/oq.cr","line_number":14,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L14"},"def":{"name":"json?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == JSON"}},{"html_id":"simple_yaml?-instance-method","name":"simple_yaml?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/oq.cr","line_number":18,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L18"},"def":{"name":"simple_yaml?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SimpleYAML"}},{"html_id":"xml?-instance-method","name":"xml?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/oq.cr","line_number":23,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L23"},"def":{"name":"xml?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == XML"}},{"html_id":"yaml?-instance-method","name":"yaml?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/oq.cr","line_number":26,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L26"},"def":{"name":"yaml?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == YAML"}}],"macros":[],"types":[]},{"html_id":"oq/OQ/Processor","path":"OQ/Processor.html","kind":"class","full_name":"OQ::Processor","name":"Processor","abstract":false,"superclass":{"html_id":"oq/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"oq/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"oq/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/oq.cr","line_number":64,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L64"}],"repository_name":"oq","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"oq/OQ","kind":"module","full_name":"OQ","name":"OQ"},"doc":"Handles the logic of converting the input format (if needed),\nprocessing it via [jq](https://stedolan.github.io/jq/),\nand converting the output format (if needed).\n\n```\nrequire \"oq\"\n\n# This could be any `IO`, e.g. an `HTTP` request body, etc.\ninput_io = IO::Memory.new %({\"name\":\"Jim\"})\n\n# Create a processor, specifying that we want the output format to be `YAML`.\nprocessor = OQ::Processor.new output_format: :yaml\n\nFile.open(\"./out.yml\", \"w\") do |file|\n  # Process the data using our custom input and output IOs.\n  # The first argument represents the input arguments;\n  # i.g. the filter and/or any other arguments that should be passed to `jq`.\n  processor.process [\".\"], input: input_io, output: file\nend\n```","summary":"<p>Handles the logic of converting the input format (if needed), processing it via <a href=\"https://stedolan.github.io/jq/\">jq</a>, and converting the output format (if needed).</p>","class_methods":[],"constructors":[{"html_id":"new(input_format:Format=Format::JSON,output_format:Format=Format::JSON,xml_root:String=\"root\",xml_prolog:Bool=true,xml_item:String=\"item\",indent:Int32=2,tab:Bool=false,null:Bool=false,xmlns:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"input_format","doc":null,"default_value":"Format::JSON","external_name":"input_format","restriction":"Format"},{"name":"output_format","doc":null,"default_value":"Format::JSON","external_name":"output_format","restriction":"Format"},{"name":"xml_root","doc":null,"default_value":"\"root\"","external_name":"xml_root","restriction":"String"},{"name":"xml_prolog","doc":null,"default_value":"true","external_name":"xml_prolog","restriction":"Bool"},{"name":"xml_item","doc":null,"default_value":"\"item\"","external_name":"xml_item","restriction":"String"},{"name":"indent","doc":null,"default_value":"2","external_name":"indent","restriction":"Int32"},{"name":"tab","doc":null,"default_value":"false","external_name":"tab","restriction":"Bool"},{"name":"null","doc":null,"default_value":"false","external_name":"null","restriction":"Bool"},{"name":"xmlns","doc":null,"default_value":"false","external_name":"xmlns","restriction":"Bool"}],"args_string":"(input_format : Format = Format::JSON, output_format : Format = Format::JSON, xml_root : String = \"root\", xml_prolog : Bool = true, xml_item : String = \"item\", indent : Int32 = 2, tab : Bool = false, null : Bool = false, xmlns : Bool = false)","args_html":"(input_format : <a href=\"../OQ/Format.html\">Format</a> = <span class=\"t\">Format</span><span class=\"t\">::</span><span class=\"t\">JSON</span>, output_format : <a href=\"../OQ/Format.html\">Format</a> = <span class=\"t\">Format</span><span class=\"t\">::</span><span class=\"t\">JSON</span>, xml_root : String = <span class=\"s\">&quot;root&quot;</span>, xml_prolog : Bool = <span class=\"n\">true</span>, xml_item : String = <span class=\"s\">&quot;item&quot;</span>, indent : Int32 = <span class=\"n\">2</span>, tab : Bool = <span class=\"n\">false</span>, null : Bool = <span class=\"n\">false</span>, xmlns : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/oq.cr","line_number":105,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L105"},"def":{"name":"new","args":[{"name":"input_format","doc":null,"default_value":"Format::JSON","external_name":"input_format","restriction":"Format"},{"name":"output_format","doc":null,"default_value":"Format::JSON","external_name":"output_format","restriction":"Format"},{"name":"xml_root","doc":null,"default_value":"\"root\"","external_name":"xml_root","restriction":"String"},{"name":"xml_prolog","doc":null,"default_value":"true","external_name":"xml_prolog","restriction":"Bool"},{"name":"xml_item","doc":null,"default_value":"\"item\"","external_name":"xml_item","restriction":"String"},{"name":"indent","doc":null,"default_value":"2","external_name":"indent","restriction":"Int32"},{"name":"tab","doc":null,"default_value":"false","external_name":"tab","restriction":"Bool"},{"name":"null","doc":null,"default_value":"false","external_name":"null","restriction":"Bool"},{"name":"xmlns","doc":null,"default_value":"false","external_name":"xmlns","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(input_format, output_format, xml_root, xml_prolog, xml_item, indent, tab, null, xmlns)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"add_arg(value:String):Nil-instance-method","name":"add_arg","doc":"Adds the provided *value* to the internal args array.","summary":"<p>Adds the provided <em>value</em> to the internal args array.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String) : Nil","args_html":"(value : String) : Nil","location":{"filename":"src/oq.cr","line_number":129,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L129"},"def":{"name":"add_arg","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@args << value"}},{"html_id":"add_forced_array(name:String):Nil-instance-method","name":"add_forced_array","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Nil","args_html":"(name : String) : Nil","location":{"filename":"src/oq.cr","line_number":137,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L137"},"def":{"name":"add_forced_array","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"xml_forced_arrays << name"}},{"html_id":"add_xml_namespace(prefix:String,href:String):Nil-instance-method","name":"add_xml_namespace","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"},{"name":"href","doc":null,"default_value":"","external_name":"href","restriction":"String"}],"args_string":"(prefix : String, href : String) : Nil","args_html":"(prefix : String, href : String) : Nil","location":{"filename":"src/oq.cr","line_number":133,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L133"},"def":{"name":"add_xml_namespace","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"},{"name":"href","doc":null,"default_value":"","external_name":"href","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@xml_namespaces[href] = prefix"}},{"html_id":"indent:Int32-instance-method","name":"indent","doc":"The number of spaces to use for indentation.","summary":"<p>The number of spaces to use for indentation.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/oq.cr","line_number":81,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L81"},"def":{"name":"indent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@indent"}},{"html_id":"indent=(indent:Int32)-instance-method","name":"indent=","doc":"The number of spaces to use for indentation.","summary":"<p>The number of spaces to use for indentation.</p>","abstract":false,"args":[{"name":"indent","doc":null,"default_value":"","external_name":"indent","restriction":"Int32"}],"args_string":"(indent : Int32)","args_html":"(indent : Int32)","location":{"filename":"src/oq.cr","line_number":81,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L81"},"def":{"name":"indent=","args":[{"name":"indent","doc":null,"default_value":"","external_name":"indent","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@indent = indent"}},{"html_id":"input_format:Format-instance-method","name":"input_format","doc":"The format that the input data is in.","summary":"<p>The format that the input data is in.</p>","abstract":false,"args":[],"args_string":" : Format","args_html":" : <a href=\"../OQ/Format.html\">Format</a>","location":{"filename":"src/oq.cr","line_number":66,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L66"},"def":{"name":"input_format","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Format","visibility":"Public","body":"@input_format"}},{"html_id":"input_format=(input_format:Format)-instance-method","name":"input_format=","doc":"The format that the input data is in.","summary":"<p>The format that the input data is in.</p>","abstract":false,"args":[{"name":"input_format","doc":null,"default_value":"","external_name":"input_format","restriction":"Format"}],"args_string":"(input_format : Format)","args_html":"(input_format : <a href=\"../OQ/Format.html\">Format</a>)","location":{"filename":"src/oq.cr","line_number":66,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L66"},"def":{"name":"input_format=","args":[{"name":"input_format","doc":null,"default_value":"","external_name":"input_format","restriction":"Format"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@input_format = input_format"}},{"html_id":"null=(null:Bool)-instance-method","name":"null=","doc":"Do not read any input, using `null` as the singular input value.","summary":"<p>Do not read any input, using <code>null</code> as the singular input value.</p>","abstract":false,"args":[{"name":"null","doc":null,"default_value":"","external_name":"null","restriction":"Bool"}],"args_string":"(null : Bool)","args_html":"(null : Bool)","location":{"filename":"src/oq.cr","line_number":87,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L87"},"def":{"name":"null=","args":[{"name":"null","doc":null,"default_value":"","external_name":"null","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@null = null"}},{"html_id":"null?:Bool-instance-method","name":"null?","doc":"Do not read any input, using `null` as the singular input value.","summary":"<p>Do not read any input, using <code>null</code> as the singular input value.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/oq.cr","line_number":87,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L87"},"def":{"name":"null?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@null"}},{"html_id":"output_format:Format-instance-method","name":"output_format","doc":"The format that the output should be transcoded into.","summary":"<p>The format that the output should be transcoded into.</p>","abstract":false,"args":[],"args_string":" : Format","args_html":" : <a href=\"../OQ/Format.html\">Format</a>","location":{"filename":"src/oq.cr","line_number":69,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L69"},"def":{"name":"output_format","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Format","visibility":"Public","body":"@output_format"}},{"html_id":"output_format=(output_format:Format)-instance-method","name":"output_format=","doc":"The format that the output should be transcoded into.","summary":"<p>The format that the output should be transcoded into.</p>","abstract":false,"args":[{"name":"output_format","doc":null,"default_value":"","external_name":"output_format","restriction":"Format"}],"args_string":"(output_format : Format)","args_html":"(output_format : <a href=\"../OQ/Format.html\">Format</a>)","location":{"filename":"src/oq.cr","line_number":69,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L69"},"def":{"name":"output_format=","args":[{"name":"output_format","doc":null,"default_value":"","external_name":"output_format","restriction":"Format"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@output_format = output_format"}},{"html_id":"process(input_args:Array(String)=ARGV,input:IO=ARGF,output:IO=STDOUT,error:IO=STDERR):Nil-instance-method","name":"process","doc":"Consumes `#input_format` data from the provided *input* `IO`, along with any *input_args*.\nThe data is then converted to `JSON`, passed to `jq`, and then converted to `#output_format` while being written to the *output* `IO`.\nAny errors are written to the *error* `IO`.","summary":"<p>Consumes <code><a href=\"../OQ/Processor.html#input_format%3AFormat-instance-method\">#input_format</a></code> data from the provided <em>input</em> <code>IO</code>, along with any <em>input_args</em>.</p>","abstract":false,"args":[{"name":"input_args","doc":null,"default_value":"ARGV","external_name":"input_args","restriction":"Array(String)"},{"name":"input","doc":null,"default_value":"ARGF","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":"IO"},{"name":"error","doc":null,"default_value":"STDERR","external_name":"error","restriction":"IO"}],"args_string":"(input_args : Array(String) = ARGV, input : IO = ARGF, output : IO = STDOUT, error : IO = STDERR) : Nil","args_html":"(input_args : Array(String) = <span class=\"t\">ARGV</span>, input : IO = <span class=\"t\">ARGF</span>, output : IO = <span class=\"t\">STDOUT</span>, error : IO = <span class=\"t\">STDERR</span>) : Nil","location":{"filename":"src/oq.cr","line_number":144,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L144"},"def":{"name":"process","args":[{"name":"input_args","doc":null,"default_value":"ARGV","external_name":"input_args","restriction":"Array(String)"},{"name":"input","doc":null,"default_value":"ARGF","external_name":"input","restriction":"IO"},{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":"IO"},{"name":"error","doc":null,"default_value":"STDERR","external_name":"error","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"at_exit do\n  @tmp_files.each(&.delete)\nend\nself.consume_file_args(input_args, \"--rawfile\", \"--argfile\", \"--slurpfile\")\nself.consume_file_args(input_args, \"-f\", \"--from-file\", \"-L\", count: 1)\nself.consume_file_args(input_args, \"--arg\", \"--argjson\")\nself.extract_args(input_args, output)\nif (!@xmlns) && (!@xml_namespaces.empty?)\n  raise(ArgumentError.new(\"The `--xml-namespace-alias` option must be used with the `--xmlns` option.\"))\nend\ninput = @null ? IO::Memory.new : IO::ARGF.new(input_args, input)\ninput_read, input_write = IO.pipe\noutput_read, output_write = IO.pipe\nchannel = Channel(Bool | Exception).new\nif (!@input_format.json?) && input_args.size > 1\n  input_args.replace(input_args.map do |file_name|\n    (File.tempfile(\".#{File.basename(file_name)}\") do |tmp_file|\n      File.open(file_name) do |file|\n        (@input_format.converter(self)).deserialize(file, tmp_file)\n      end\n    end).tap do |tf|\n      @tmp_files << tf\n    end.path\n  end)\n  @input_format = :json\nend\nspawn do\n  begin\n    (@input_format.converter(self)).deserialize(input, input_write)\n    input_write.close\n    channel.send(true)\n  rescue ex\n    input_write.close\n    channel.send(ex)\n  end\nend\nspawn do\n  begin\n    output_write.close\n    (@output_format.converter(self)).serialize(output_read, output)\n    channel.send(true)\n  rescue ex\n    channel.send(ex)\n  end\nend\nrun = Process.run(\"jq\", @args, input: input_read, output: output_write, error: error)\nif run.success?\nelse\n  raise(RuntimeError.new)\nend\n2.times do\n  case (  v = channel.receive)\n  when Exception\n    raise(v)\n  end\nend\n"}},{"html_id":"tab:Bool-instance-method","name":"tab","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use <code><a href=\"../OQ/Processor.html#tab%3F%3ABool-instance-method\">Processor#tab?</a></code> instead.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/oq.cr","line_number":119,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L119"},"def":{"name":"tab","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"self.tab?"}},{"html_id":"tab=(tab:Bool)-instance-method","name":"tab=","doc":"If a tab for each indentation level instead of spaces.","summary":"<p>If a tab for each indentation level instead of spaces.</p>","abstract":false,"args":[{"name":"tab","doc":null,"default_value":"","external_name":"tab","restriction":"Bool"}],"args_string":"(tab : Bool)","args_html":"(tab : Bool)","location":{"filename":"src/oq.cr","line_number":84,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L84"},"def":{"name":"tab=","args":[{"name":"tab","doc":null,"default_value":"","external_name":"tab","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tab = tab"}},{"html_id":"tab?:Bool-instance-method","name":"tab?","doc":"If a tab for each indentation level instead of spaces.","summary":"<p>If a tab for each indentation level instead of spaces.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/oq.cr","line_number":84,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L84"},"def":{"name":"tab?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@tab"}},{"html_id":"xml_item:String-instance-method","name":"xml_item","doc":"The name for XML array elements without keys.","summary":"<p>The name for XML array elements without keys.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/oq.cr","line_number":78,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L78"},"def":{"name":"xml_item","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@xml_item"}},{"html_id":"xml_item=(xml_item:String)-instance-method","name":"xml_item=","doc":"The name for XML array elements without keys.","summary":"<p>The name for XML array elements without keys.</p>","abstract":false,"args":[{"name":"xml_item","doc":null,"default_value":"","external_name":"xml_item","restriction":"String"}],"args_string":"(xml_item : String)","args_html":"(xml_item : String)","location":{"filename":"src/oq.cr","line_number":78,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L78"},"def":{"name":"xml_item=","args":[{"name":"xml_item","doc":null,"default_value":"","external_name":"xml_item","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@xml_item = xml_item"}},{"html_id":"xml_prolog:Bool-instance-method","name":"xml_prolog","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use <code><a href=\"../OQ/Processor.html#xml_prolog%3F%3ABool-instance-method\">Processor#xml_prolog?</a></code> instead.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/oq.cr","line_number":124,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L124"},"def":{"name":"xml_prolog","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"self.xml_prolog?"}},{"html_id":"xml_prolog=(xml_prolog:Bool)-instance-method","name":"xml_prolog=","doc":"If the XML prolog should be emitted.","summary":"<p>If the XML prolog should be emitted.</p>","abstract":false,"args":[{"name":"xml_prolog","doc":null,"default_value":"","external_name":"xml_prolog","restriction":"Bool"}],"args_string":"(xml_prolog : Bool)","args_html":"(xml_prolog : Bool)","location":{"filename":"src/oq.cr","line_number":75,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L75"},"def":{"name":"xml_prolog=","args":[{"name":"xml_prolog","doc":null,"default_value":"","external_name":"xml_prolog","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@xml_prolog = xml_prolog"}},{"html_id":"xml_prolog?:Bool-instance-method","name":"xml_prolog?","doc":"If the XML prolog should be emitted.","summary":"<p>If the XML prolog should be emitted.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/oq.cr","line_number":75,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L75"},"def":{"name":"xml_prolog?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@xml_prolog"}},{"html_id":"xml_root:String-instance-method","name":"xml_root","doc":"The root of the XML document when transcoding to XML.","summary":"<p>The root of the XML document when transcoding to XML.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/oq.cr","line_number":72,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L72"},"def":{"name":"xml_root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@xml_root"}},{"html_id":"xml_root=(xml_root:String)-instance-method","name":"xml_root=","doc":"The root of the XML document when transcoding to XML.","summary":"<p>The root of the XML document when transcoding to XML.</p>","abstract":false,"args":[{"name":"xml_root","doc":null,"default_value":"","external_name":"xml_root","restriction":"String"}],"args_string":"(xml_root : String)","args_html":"(xml_root : String)","location":{"filename":"src/oq.cr","line_number":72,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L72"},"def":{"name":"xml_root=","args":[{"name":"xml_root","doc":null,"default_value":"","external_name":"xml_root","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@xml_root = xml_root"}},{"html_id":"xmlns=(xmlns:Bool)-instance-method","name":"xmlns=","doc":"If XML namespaces should be parsed as well.\nTODO: Remove this in oq 2.0 as it'll becomethe default.","summary":"<p>If XML namespaces should be parsed as well.</p>","abstract":false,"args":[{"name":"xmlns","doc":null,"default_value":"","external_name":"xmlns","restriction":"Bool"}],"args_string":"(xmlns : Bool)","args_html":"(xmlns : Bool)","location":{"filename":"src/oq.cr","line_number":91,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L91"},"def":{"name":"xmlns=","args":[{"name":"xmlns","doc":null,"default_value":"","external_name":"xmlns","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@xmlns = xmlns"}},{"html_id":"xmlns?:Bool-instance-method","name":"xmlns?","doc":"If XML namespaces should be parsed as well.\nTODO: Remove this in oq 2.0 as it'll becomethe default.","summary":"<p>If XML namespaces should be parsed as well.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/oq.cr","line_number":91,"url":"https://github.com/Blacksmoke16/oq/blob/v1.3.2/src/oq.cr#L91"},"def":{"name":"xmlns?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@xmlns"}}],"macros":[],"types":[]}]}]}})